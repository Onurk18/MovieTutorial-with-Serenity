{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/MovieDB/GenreColumns.ts", "../../../Modules/ServerTypes/MovieDB/GenreRow.ts", "../../../Modules/ServerTypes/MovieDB/GenreService.ts", "../../../Modules/MovieDB/Movie/GenreListFormatter.ts", "../../../Modules/ServerTypes/MovieDB/GenreForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieForm.ts", "../../../Modules/ServerTypes/Web/Modules.MovieDB.Movie.MovieKind.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieService.ts", "../../../Modules/ServerTypes/MovieDB/MovieColumns.ts"],
  "sourcesContent": ["\uFEFFexport class GenreColumns {\r\n    static columnsKey = 'MovieDB.Genre';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface GenreRow {\n    GenreId?: number;\n    Name?: string;\n}\n\nexport abstract class GenreRow {\n    static readonly idProperty = 'GenreId';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'MovieDB.Genre';\n    static readonly lookupKey = 'MovieDB.Genre';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<GenreRow>('MovieDB.Genre') }\n    static async getLookupAsync() { return getLookupAsync<GenreRow>('MovieDB.Genre') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<GenreRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport namespace GenreService {\n    export const baseUrl = 'MovieDB/Genre';\n\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Genre/Create\",\n        Update: \"MovieDB/Genre/Update\",\n        Delete: \"MovieDB/Genre/Delete\",\n        Retrieve: \"MovieDB/Genre/Retrieve\",\n        List: \"MovieDB/Genre/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GenreService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, Formatter } from \"@serenity-is/corelib\";\r\nimport { htmlEncode } from \"@serenity-is/corelib/q\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerFormatter(\"MovieTutorial.MovieDB.GenreListFormatter\")\r\nexport class GenreListFormatter implements Formatter {\r\n    format(ctx: FormatterContext) {\r\n        let idList = ctx.value as number[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        let byId = GenreRow.getLookup().itemById;\r\n\r\n        return idList.map(x => {\r\n            let g = byId[x];\r\n            if (!g)\r\n                return x.toString();\r\n\r\n            return htmlEncode(g.Name);\r\n        }).join(\", \");\r\n    }\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface GenreForm {\n    Name: StringEditor;\n}\n\nexport class GenreForm extends PrefixedContext {\n    static formKey = 'MovieDB.Genre';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GenreForm.init)  {\n            GenreForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(GenreForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, TextAreaEditor, IntegerEditor, DateEditor, LookupEditor, EnumEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { MovieKind } from \"../Web/Modules.MovieDB.Movie.MovieKind\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieForm {\r\n    Title: StringEditor;\r\n    Description: TextAreaEditor;\r\n    Storyline: TextAreaEditor;\r\n    Year: IntegerEditor;\r\n    ReleaseDate: DateEditor;\r\n    Runtime: IntegerEditor;\r\n    GenreList: LookupEditor;\r\n    Kind: EnumEditor;\r\n}\r\n\r\nexport class MovieForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.Movie';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieForm.init)  {\r\n            MovieForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = TextAreaEditor;\r\n            var w2 = IntegerEditor;\r\n            var w3 = DateEditor;\r\n            var w4 = LookupEditor;\r\n            var w5 = EnumEditor;\r\n\r\n            initFormType(MovieForm, [\r\n                'Title', w0,\r\n                'Description', w1,\r\n                'Storyline', w1,\r\n                'Year', w2,\r\n                'ReleaseDate', w3,\r\n                'Runtime', w2,\r\n                'GenreList', w4,\r\n                'Kind', w5\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[MovieKind]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum MovieKind {\n    Film = 1,\n    TvSeries = 2,\n    MiniSeries = 3\n}\nDecorators.registerEnumType(MovieKind, 'MovieTutorial.Web.Modules.MovieDB.Movie.MovieKind', 'MovieDB.MovieKind');", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieGenresRow {\r\n    MovieGenreId?: number;\r\n    MovieId?: number;\r\n    GenreId?: number;\r\n    MovieTitle?: string;\r\n    GenreName?: string;\r\n}\r\n\r\nexport abstract class MovieGenresRow {\r\n    static readonly idProperty = 'MovieGenreId';\r\n    static readonly localTextPrefix = 'MovieDB.MovieGenres';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieGenresRow>();\r\n}", "\uFEFFimport { MovieKind } from \"../Web/Modules.MovieDB.Movie.MovieKind\";\r\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieRow {\r\n    MovieId?: number;\r\n    Title?: string;\r\n    Description?: string;\r\n    Storyline?: string;\r\n    Year?: number;\r\n    ReleaseDate?: string;\r\n    Runtime?: number;\r\n    Kind?: MovieKind;\r\n    GenreList?: number[];\r\n}\r\n\r\nexport abstract class MovieRow {\r\n    static readonly idProperty = 'MovieId';\r\n    static readonly nameProperty = 'Title';\r\n    static readonly localTextPrefix = 'MovieDB.Movie';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { MovieRow } from \"./MovieRow\";\nimport { MovieListRequest } from \"./MovieListRequest\";\n\nexport namespace MovieService {\n    export const baseUrl = 'MovieDB/Movie';\n\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: MovieListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Movie/Create\",\n        Update: \"MovieDB/Movie/Update\",\n        Delete: \"MovieDB/Movie/Delete\",\n        Retrieve: \"MovieDB/Movie/Retrieve\",\n        List: \"MovieDB/Movie/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { GenreListFormatter } from \"@/MovieDB/Movie/GenreListFormatter\";\r\n\r\nexport class MovieColumns {\r\n    static columnsKey = 'MovieDB.Movie';\r\n}\r\n\r\n[GenreListFormatter]; // referenced types"],
  "mappings": "2EAAQ,IAAMA,EAAN,KAAmB,CAE3B,EAFcC,EAAAD,EAAA,gBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAAuD,SAOjD,IAAeC,EAAf,KAAwB,CAO3B,OAAO,WAAY,CAAE,SAAO,aAAoB,eAAe,CAAE,CACjE,OAAa,gBAAiB,QAAAC,EAAA,sBAAE,SAAO,kBAAyB,eAAe,CAAE,GAQrF,EAhBsBC,EAAAF,EAAA,YAAAA,EACF,WAAa,UADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,UAAY,gBAJVA,EAUF,iBAAmB,yBAVjBA,EAWF,iBAAmB,yBAXjBA,EAYF,eAAiB,yBAZfA,EAaF,iBAAmB,yBAbjBA,EAeF,UAAS,eAAsB,ECtBlD,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHjB,IAAAK,EAAsC,SACtCC,EAA2B,SCD1B,IAAAC,EAA8C,SAC/CC,EAA6B,SAMtB,IAAMC,EAAN,cAAwB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,kBAET,gBAAaF,EAAW,CACpB,OAAQE,CACZ,CAAC,CACL,CACJ,CACJ,EAjBaC,EAANH,EAAMI,EAAAD,EAAA,aAAAA,EACF,QAAU,gBCRpB,IAAAE,EAAmH,SCAnH,IAAAC,EAA2B,SAEhBC,OACRA,IAAA,KAAO,GAAP,OACAA,IAAA,SAAW,GAAX,WACAA,IAAA,WAAa,GAAb,aAHQA,OAAA,IAKZ,aAAW,iBAAiBA,EAAW,oDAAqD,mBAAmB,EDL/G,IAAAC,EAA6B,SAatB,IAAMC,EAAN,cAAwB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,eACLC,EAAK,iBACLC,EAAK,gBACLC,EAAK,aACLC,EAAK,eACLC,EAAK,gBAET,gBAAaP,EAAW,CACpB,QAASE,EACT,cAAeC,EACf,YAAaA,EACb,OAAQC,EACR,cAAeC,EACf,UAAWD,EACX,YAAaE,EACb,OAAQC,CACZ,CAAC,CACL,CACJ,CACJ,EA7BaC,EAANR,EAAMS,EAAAD,EAAA,aAAAA,EACF,QAAU,gBEhBpB,IAAAE,EAA4B,SAUtB,IAAeC,EAAf,KAA8B,CASrC,EATsBC,EAAAD,EAAA,kBAAAA,EACF,WAAa,eADXA,EAEF,gBAAkB,sBAFhBA,EAGF,iBAAmB,yBAHjBA,EAIF,iBAAmB,yBAJjBA,EAKF,eAAiB,yBALfA,EAMF,iBAAmB,yBANjBA,EAQF,UAAS,eAA4B,ECjBzD,IAAAE,EAA4B,SAcrB,IAAeC,EAAf,KAAwB,CAU/B,EAVsBC,EAAAD,EAAA,YAAAA,EACF,WAAa,UADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAsB,ECxBlD,IAAAE,EAA0J,SAI1IC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KNEV,IAAMK,EAAN,KAA8C,CACjD,OAAOC,EAAuB,CAC1B,IAAIC,EAASD,EAAI,MACjB,GAAI,CAACC,GAAU,CAACA,EAAO,OACnB,MAAO,GAEX,IAAIC,EAAOC,EAAS,UAAU,EAAE,SAEhC,OAAOF,EAAO,IAAIG,GAAK,CACnB,IAAIC,EAAIH,EAAKE,CAAC,EACd,OAAKC,KAGE,cAAWA,EAAE,IAAI,EAFbD,EAAE,SAAS,CAG1B,CAAC,EAAE,KAAK,IAAI,CAChB,CACJ,EAhBaE,EAAAP,EAAA,sBAAAA,EAANQ,EAAA,CADN,aAAW,kBAAkB,0CAA0C,GAC3DR,GOJN,IAAMS,EAAN,KAAmB,CAE1B,EAFaC,EAAAD,EAAA,gBAAAA,EACF,WAAa",
  "names": ["GenreColumns", "__name", "import_q", "GenreRow", "__async", "__name", "import_q", "GenreService", "x", "r", "s", "o", "import_corelib", "import_q", "import_corelib", "import_q", "_GenreForm", "prefix", "w0", "GenreForm", "__name", "import_corelib", "import_corelib", "MovieKind", "import_q", "_MovieForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "MovieForm", "__name", "import_q", "MovieGenresRow", "__name", "import_q", "MovieRow", "__name", "import_q", "MovieService", "x", "r", "s", "o", "GenreListFormatter", "ctx", "idList", "byId", "GenreRow", "x", "g", "__name", "__decorateClass", "MovieColumns", "__name"]
}
