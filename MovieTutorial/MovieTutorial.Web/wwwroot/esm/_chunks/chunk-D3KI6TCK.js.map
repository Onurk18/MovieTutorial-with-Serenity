{
  "version": 3,
  "sources": ["external-global:@serenity-is/extensions", "../../../Modules/ServerTypes/MovieDB/GenreColumns.ts", "../../../Modules/ServerTypes/MovieDB/GenreRow.ts", "../../../Modules/ServerTypes/MovieDB/GenreService.ts", "../../../Modules/MovieDB/Movie/GenreListFormatter.ts", "../../../Modules/ServerTypes/MovieDB/Gender.ts", "../../../Modules/ServerTypes/MovieDB/GenreForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastColumns.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastService.ts", "../../../Modules/ServerTypes/MovieDB/MovieForm.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditor.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditDialog.ts", "../../../Modules/ServerTypes/Web/Modules.MovieDB.Movie.MovieKind.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieService.ts", "../../../Modules/ServerTypes/MovieDB/PersonColumns.ts", "../../../Modules/ServerTypes/MovieDB/PersonForm.ts", "../../../Modules/MovieDB/Person/PersonMovieGrid.ts", "../../../Modules/ServerTypes/MovieDB/PersonMovieColumns.ts", "../../../Modules/ServerTypes/MovieDB/PersonRow.ts", "../../../Modules/ServerTypes/MovieDB/PersonService.ts", "../../../Modules/ServerTypes/MovieDB/MovieColumns.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFexport class GenreColumns {\r\n    static columnsKey = 'MovieDB.Genre';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface GenreRow {\n    GenreId?: number;\n    Name?: string;\n}\n\nexport abstract class GenreRow {\n    static readonly idProperty = 'GenreId';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'MovieDB.Genre';\n    static readonly lookupKey = 'MovieDB.Genre';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<GenreRow>('MovieDB.Genre') }\n    static async getLookupAsync() { return getLookupAsync<GenreRow>('MovieDB.Genre') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<GenreRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport namespace GenreService {\n    export const baseUrl = 'MovieDB/Genre';\n\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Genre/Create\",\n        Update: \"MovieDB/Genre/Update\",\n        Delete: \"MovieDB/Genre/Delete\",\n        Retrieve: \"MovieDB/Genre/Retrieve\",\n        List: \"MovieDB/Genre/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GenreService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "import { Decorators, Formatter } from \"@serenity-is/corelib\";\r\nimport { htmlEncode } from \"@serenity-is/corelib/q\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerFormatter(\"MovieTutorial.MovieDB.GenreListFormatter\")\r\nexport class GenreListFormatter implements Formatter {\r\n    format(ctx: FormatterContext) {\r\n        let idList = ctx.value as number[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        let byId = GenreRow.getLookup().itemById;\r\n\r\n        return idList.map(x => {\r\n            let g = byId[x];\r\n            if (!g)\r\n                return x.toString();\r\n\r\n            return htmlEncode(g.Name);\r\n        }).join(\", \");\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum Gender {\n    Male = 1,\n    Female = 2\n}\nDecorators.registerEnumType(Gender, 'MovieTutorial.MovieDB.Gender', 'MovieDB.Gender');", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface GenreForm {\n    Name: StringEditor;\n}\n\nexport class GenreForm extends PrefixedContext {\n    static formKey = 'MovieDB.Genre';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GenreForm.init)  {\n            GenreForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(GenreForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFexport class MovieCastColumns {\n    static columnsKey = 'MovieDB.MovieCast';\n}", "\uFEFFimport { LookupEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MovieCastForm {\n    PersonId: LookupEditor;\n    Character: StringEditor;\n}\n\nexport class MovieCastForm extends PrefixedContext {\n    static formKey = 'MovieDB.MovieCast';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieCastForm.init)  {\n            MovieCastForm.init = true;\n\n            var w0 = LookupEditor;\n            var w1 = StringEditor;\n\n            initFormType(MovieCastForm, [\n                'PersonId', w0,\n                'Character', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MovieCastRow {\n    MovieCastId?: number;\n    MovieId?: number;\n    PersonId?: number;\n    Character?: string;\n    MovieYear?: number;\n    MovieTitle?: string;\n    PersonFirstName?: string;\n    PersonLastname?: string;\n    PersonFullname?: string;\n}\n\nexport abstract class MovieCastRow {\n    static readonly idProperty = 'MovieCastId';\n    static readonly nameProperty = 'Character';\n    static readonly localTextPrefix = 'MovieDB.MovieCast';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MovieCastRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { MovieCastRow } from \"./MovieCastRow\";\n\nexport namespace MovieCastService {\n    export const baseUrl = 'MovieDB/MovieCast';\n\n    export declare function Create(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/MovieCast/Create\",\n        Update: \"MovieDB/MovieCast/Update\",\n        Delete: \"MovieDB/MovieCast/Delete\",\n        Retrieve: \"MovieDB/MovieCast/Retrieve\",\n        List: \"MovieDB/MovieCast/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieCastService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, TextAreaEditor, IntegerEditor, DateEditor, LookupEditor, EnumEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { MovieCastEditor } from \"@/MovieDB/MovieCast/MovieCastEditor\";\nimport { MovieKind } from \"../Web/Modules.MovieDB.Movie.MovieKind\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MovieForm {\n    Title: StringEditor;\n    Description: TextAreaEditor;\n    CastList: MovieCastEditor;\n    Storyline: TextAreaEditor;\n    Year: IntegerEditor;\n    ReleaseDate: DateEditor;\n    Runtime: IntegerEditor;\n    GenreList: LookupEditor;\n    Kind: EnumEditor;\n}\n\nexport class MovieForm extends PrefixedContext {\n    static formKey = 'MovieDB.Movie';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieForm.init)  {\n            MovieForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = TextAreaEditor;\n            var w2 = MovieCastEditor;\n            var w3 = IntegerEditor;\n            var w4 = DateEditor;\n            var w5 = LookupEditor;\n            var w6 = EnumEditor;\n\n            initFormType(MovieForm, [\n                'Title', w0,\n                'Description', w1,\n                'CastList', w2,\n                'Storyline', w1,\n                'Year', w3,\n                'ReleaseDate', w4,\n                'Runtime', w3,\n                'GenreList', w5,\n                'Kind', w6\n            ]);\n        }\n    }\n}\n\n[MovieKind]; // referenced types", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { MovieCastRow, PersonRow } from \"../../ServerTypes/MovieDB\";\r\nimport { MovieCastEditDialog } from \"./MovieCastEditDialog\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.MovieCastEditor\")\r\nexport class MovieCastEditor extends GridEditorBase<MovieCastRow> {\r\n    protected getColumnsKey() { return \"MovieDB.MovieCast\"; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n    protected getDialogType() { return MovieCastEditDialog; }\n\n    protected validateEntity(row: MovieCastRow, id: number) {\r\n        if (!super.validateEntity(row, id))\r\n            return false;\r\n            \r\n        row.PersonFullname = PersonRow.getLookup()\r\n            .itemById[row.PersonId].Fullname;\r\n\r\n        return true;\r\n    }\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n    protected getAddButtonCaption() {\r\n        return \"Add\";\r\n    }\r\n}", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\r\nimport { MovieCastForm, MovieCastRow } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerClass(\"MovieTutorial.MovieDB.MovieCastEditDialog\")\r\nexport class MovieCastEditDialog extends GridEditorDialog<MovieCastRow> {\r\n    protected getFormKey() { return MovieCastForm.formKey; }\r\n    protected getNameProperty() { return MovieCastRow.nameProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    protected form: MovieCastForm = new MovieCastForm(this.idPrefix);\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum MovieKind {\n    Film = 1,\n    TvSeries = 2,\n    MiniSeries = 3\n}\nDecorators.registerEnumType(MovieKind, 'MovieTutorial.Web.Modules.MovieDB.Movie.MovieKind', 'MovieDB.MovieKind');", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieGenresRow {\r\n    MovieGenreId?: number;\r\n    MovieId?: number;\r\n    GenreId?: number;\r\n    MovieTitle?: string;\r\n    GenreName?: string;\r\n}\r\n\r\nexport abstract class MovieGenresRow {\r\n    static readonly idProperty = 'MovieGenreId';\r\n    static readonly localTextPrefix = 'MovieDB.MovieGenres';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieGenresRow>();\r\n}", "\uFEFFimport { MovieCastRow } from \"./MovieCastRow\";\nimport { MovieKind } from \"../Web/Modules.MovieDB.Movie.MovieKind\";\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MovieRow {\n    CastList?: MovieCastRow[];\n    MovieId?: number;\n    Title?: string;\n    Description?: string;\n    Storyline?: string;\n    Year?: number;\n    ReleaseDate?: string;\n    Runtime?: number;\n    Kind?: MovieKind;\n    GenreList?: number[];\n}\n\nexport abstract class MovieRow {\n    static readonly idProperty = 'MovieId';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'MovieDB.Movie';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MovieRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { MovieRow } from \"./MovieRow\";\nimport { MovieListRequest } from \"./MovieListRequest\";\n\nexport namespace MovieService {\n    export const baseUrl = 'MovieDB/Movie';\n\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: MovieListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Movie/Create\",\n        Update: \"MovieDB/Movie/Update\",\n        Delete: \"MovieDB/Movie/Delete\",\n        Retrieve: \"MovieDB/Movie/Retrieve\",\n        List: \"MovieDB/Movie/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Gender } from \"./Gender\";\n\nexport class PersonColumns {\n    static columnsKey = 'MovieDB.Person';\n}\n\n[Gender]; // referenced types", "\uFEFFimport { StringEditor, DateEditor, EnumEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { Gender } from \"./Gender\";\nimport { PersonMovieGrid } from \"@/MovieDB/Person/PersonMovieGrid\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface PersonForm {\n    FirstName: StringEditor;\n    Lastname: StringEditor;\n    BirthDate: DateEditor;\n    BirthPlace: StringEditor;\n    Gender: EnumEditor;\n    Height: IntegerEditor;\n    MoviesGrid: PersonMovieGrid;\n}\n\nexport class PersonForm extends PrefixedContext {\n    static formKey = 'MovieDB.Person';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!PersonForm.init)  {\n            PersonForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DateEditor;\n            var w2 = EnumEditor;\n            var w3 = IntegerEditor;\n            var w4 = PersonMovieGrid;\n\n            initFormType(PersonForm, [\n                'FirstName', w0,\n                'Lastname', w0,\n                'BirthDate', w1,\n                'BirthPlace', w0,\n                'Gender', w2,\n                'Height', w3,\n                'MoviesGrid', w4\n            ]);\n        }\n    }\n}\n\n[Gender]; // referenced types", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\r\nimport { MovieCastRow, MovieCastService } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.PersonMovieGrid\")\r\nexport class PersonMovieGrid extends EntityGrid<MovieCastRow, any>\r\n{\r\n    protected getColumnsKey() { return \"MovieDB.PersonMovie\"; }\r\n    protected getIdProperty() { return MovieCastRow.idProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n    protected getService() { return MovieCastService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getButtons() {\r\n        return null;\r\n    }\r\n\r\n    protected getInitialTitle() {\r\n        return null;\r\n    }\r\n\r\n    protected usePager() {\r\n        return false;\r\n    }\r\n\r\n    protected getGridCanLoad() {\r\n        return this.personID != null;\r\n    }\r\n\r\n    private _personID: number;\r\n\r\n    get personID() {\r\n        return this._personID;\r\n    }\r\n\r\n    set personID(value: number) {\r\n        if (this._personID != value) {\r\n            this._personID = value;\r\n            this.setEquality(MovieCastRow.Fields.PersonId, value);\r\n            this.refresh();\r\n        }\r\n    }\r\n}", "\uFEFFexport class PersonMovieColumns {\n    static columnsKey = 'MovieDB.PersonMovie';\n}", "\uFEFFimport { Gender } from \"./Gender\";\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface PersonRow {\n    PersonId?: number;\n    FirstName?: string;\n    Lastname?: string;\n    BirthDate?: string;\n    BirthPlace?: string;\n    Gender?: Gender;\n    Height?: number;\n    Fullname?: string;\n}\n\nexport abstract class PersonRow {\n    static readonly idProperty = 'PersonId';\n    static readonly nameProperty = 'Fullname';\n    static readonly localTextPrefix = 'MovieDB.Person';\n    static readonly lookupKey = 'MovieDB.Person';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<PersonRow>('MovieDB.Person') }\n    static async getLookupAsync() { return getLookupAsync<PersonRow>('MovieDB.Person') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<PersonRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { PersonRow } from \"./PersonRow\";\n\nexport namespace PersonService {\n    export const baseUrl = 'MovieDB/Person';\n\n    export declare function Create(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Person/Create\",\n        Update: \"MovieDB/Person/Update\",\n        Delete: \"MovieDB/Person/Delete\",\n        Retrieve: \"MovieDB/Person/Retrieve\",\n        List: \"MovieDB/Person/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>PersonService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { GenreListFormatter } from \"@/MovieDB/Movie/GenreListFormatter\";\r\n\r\nexport class MovieColumns {\r\n    static columnsKey = 'MovieDB.Movie';\r\n}\r\n\r\n[GenreListFormatter]; // referenced types"],
  "mappings": "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",
  "names": ["require_extensions", "__commonJSMin", "exports", "module", "GenreColumns", "__name", "import_q", "GenreRow", "__async", "__name", "import_q", "GenreService", "x", "r", "s", "o", "import_corelib", "import_q", "import_corelib", "Gender", "import_corelib", "import_q", "_GenreForm", "prefix", "w0", "GenreForm", "__name", "MovieCastColumns", "__name", "import_corelib", "import_q", "_MovieCastForm", "prefix", "w0", "w1", "MovieCastForm", "__name", "import_q", "MovieCastRow", "__name", "import_q", "MovieCastService", "x", "r", "s", "o", "import_corelib", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "MovieCastEditDialog", "MovieCastForm", "MovieCastRow", "__name", "__decorateClass", "MovieCastEditor", "MovieCastRow", "MovieCastEditDialog", "row", "id", "PersonRow", "container", "__name", "__decorateClass", "import_corelib", "MovieKind", "import_q", "_MovieForm", "prefix", "w0", "w1", "w2", "MovieCastEditor", "w3", "w4", "w5", "w6", "MovieForm", "__name", "import_q", "MovieGenresRow", "__name", "import_q", "MovieRow", "__name", "import_q", "MovieService", "x", "r", "s", "o", "PersonColumns", "__name", "import_corelib", "import_corelib", "PersonMovieGrid", "container", "MovieCastRow", "MovieCastService", "value", "__name", "__decorateClass", "import_q", "_PersonForm", "prefix", "w0", "w1", "w2", "w3", "w4", "PersonMovieGrid", "PersonForm", "__name", "PersonMovieColumns", "__name", "import_q", "PersonRow", "__async", "__name", "import_q", "PersonService", "x", "r", "s", "o", "GenreListFormatter", "ctx", "idList", "byId", "GenreRow", "x", "g", "__name", "__decorateClass", "MovieColumns", "__name"]
}
